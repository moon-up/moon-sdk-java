/*
 * moon-vault-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.usemoonai.moonsdk.api;

import org.usemoonai.moonsdk.client.ApiException;
import org.usemoonai.moonsdk.models.GetSupportedOnRampsResponse;
import org.usemoonai.moonsdk.models.Quote;
import org.usemoonai.moonsdk.models.SellQuote;
import org.usemoonai.moonsdk.models.SupportedAssetResponse;
import org.usemoonai.moonsdk.models.SupportedCurrenciesResponse;
import org.usemoonai.moonsdk.models.SupportedDefaultResponse;
import org.usemoonai.moonsdk.models.SupportedPaymentTypesCurrencyResponse;
import org.usemoonai.moonsdk.models.TransactionInput;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OnramperApi
 */
@Disabled
public class OnramperApiTest {

    private final OnramperApi api = new OnramperApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void onRamperCheckoutTest() throws ApiException {
        String authorization = null;
        String accountName = null;
        TransactionInput transactionInput = null;
        Object response = api.onRamperCheckout(authorization, accountName, transactionInput);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void onRamperGetQuotesBuyTest() throws ApiException {
        String authorization = null;
        String fiat = null;
        String crypto = null;
        Double amount = null;
        String paymentMethod = null;
        String uuid = null;
        String clientName = null;
        String country = null;
        List<Quote> response = api.onRamperGetQuotesBuy(authorization, fiat, crypto, amount, paymentMethod, uuid, clientName, country);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void onRamperGetQuotesSellTest() throws ApiException {
        String authorization = null;
        String fiat = null;
        String crypto = null;
        Double amount = null;
        String paymentMethod = null;
        String uuid = null;
        String clientName = null;
        String country = null;
        List<SellQuote> response = api.onRamperGetQuotesSell(authorization, fiat, crypto, amount, paymentMethod, uuid, clientName, country);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void onRamperGetSupportedAssetsTest() throws ApiException {
        String authorization = null;
        String source = null;
        String country = null;
        SupportedAssetResponse response = api.onRamperGetSupportedAssets(authorization, source, country);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void onRamperGetSupportedCurrenciesTest() throws ApiException {
        String authorization = null;
        String type = null;
        SupportedCurrenciesResponse response = api.onRamperGetSupportedCurrencies(authorization, type);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void onRamperGetSupportedDefaultsAllTest() throws ApiException {
        String authorization = null;
        String country = null;
        String type = null;
        SupportedDefaultResponse response = api.onRamperGetSupportedDefaultsAll(authorization, country, type);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void onRamperGetSupportedOnRampsAllTest() throws ApiException {
        String authorization = null;
        GetSupportedOnRampsResponse response = api.onRamperGetSupportedOnRampsAll(authorization);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void onRamperGetSupportedPaymentTypesTest() throws ApiException {
        String authorization = null;
        String fiat = null;
        String country = null;
        String type = null;
        SupportedPaymentTypesCurrencyResponse response = api.onRamperGetSupportedPaymentTypes(authorization, fiat, country, type);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void onRamperGetSupportedPaymentTypesFiatTest() throws ApiException {
        String authorization = null;
        String fiat = null;
        String country = null;
        SupportedPaymentTypesCurrencyResponse response = api.onRamperGetSupportedPaymentTypesFiat(authorization, fiat, country);
        // TODO: test validations
    }

}
