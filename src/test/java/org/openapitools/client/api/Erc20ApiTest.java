/*
 * moon-vault-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccountControllerResponse;
import org.openapitools.client.model.InputBody;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for Erc20Api
 */
@Disabled
public class Erc20ApiTest {

    private final Erc20Api api = new Erc20Api();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allowanceErc20Test() throws ApiException {
        String authorization = null;
        String name = null;
        InputBody inputBody = null;
        AccountControllerResponse response = api.allowanceErc20(authorization, name, inputBody);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void approveErc20Test() throws ApiException {
        String authorization = null;
        String name = null;
        InputBody inputBody = null;
        AccountControllerResponse response = api.approveErc20(authorization, name, inputBody);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void balanceOfErc20Test() throws ApiException {
        String authorization = null;
        String name = null;
        InputBody inputBody = null;
        AccountControllerResponse response = api.balanceOfErc20(authorization, name, inputBody);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void decimalsErc20Test() throws ApiException {
        String authorization = null;
        String name = null;
        InputBody inputBody = null;
        AccountControllerResponse response = api.decimalsErc20(authorization, name, inputBody);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void nameErc20Test() throws ApiException {
        String authorization = null;
        String name = null;
        InputBody inputBody = null;
        AccountControllerResponse response = api.nameErc20(authorization, name, inputBody);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void symbolErc20Test() throws ApiException {
        String authorization = null;
        String name = null;
        InputBody inputBody = null;
        AccountControllerResponse response = api.symbolErc20(authorization, name, inputBody);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void totalSupplyErc20Test() throws ApiException {
        String authorization = null;
        String name = null;
        InputBody inputBody = null;
        AccountControllerResponse response = api.totalSupplyErc20(authorization, name, inputBody);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transferErc20Test() throws ApiException {
        String authorization = null;
        String name = null;
        InputBody inputBody = null;
        AccountControllerResponse response = api.transferErc20(authorization, name, inputBody);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transferFromErc20Test() throws ApiException {
        String authorization = null;
        String name = null;
        InputBody inputBody = null;
        AccountControllerResponse response = api.transferFromErc20(authorization, name, inputBody);
        // TODO: test validations
    }

}
