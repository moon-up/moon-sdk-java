/*
 * moon-vault-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.usemoonai.moonsdk.api;

import org.usemoonai.moonsdk.client.ApiException;
import org.usemoonai.moonsdk.models.CreatePaymentIntentInput;
import org.usemoonai.moonsdk.models.IWebhook;
import org.usemoonai.moonsdk.models.PaymentIntentResponse;
import org.usemoonai.moonsdk.models.TatumTransactionEvent;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PaymentApi
 */
@Disabled
public class PaymentApiTest {

    private final PaymentApi api = new PaymentApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createPaymentIntentConfigTest() throws ApiException {
        String authorization = null;
        Object body = null;
        Object response = api.createPaymentIntentConfig(authorization, body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePaymentIntentConfigTest() throws ApiException {
        String authorization = null;
        String id = null;
        PaymentIntentResponse response = api.deletePaymentIntentConfig(authorization, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllPaymentIntentConfigsTest() throws ApiException {
        String authorization = null;
        List<PaymentIntentResponse> response = api.getAllPaymentIntentConfigs(authorization);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOnePaymentIntentConfigsTest() throws ApiException {
        String authorization = null;
        String id = null;
        PaymentIntentResponse response = api.getOnePaymentIntentConfigs(authorization, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void moralisWebhookTest() throws ApiException {
        String id = null;
        IWebhook iwebhook = null;
        Object response = api.moralisWebhook(id, iwebhook);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void paymentCreatePaymentIntentTest() throws ApiException {
        String authorization = null;
        CreatePaymentIntentInput createPaymentIntentInput = null;
        PaymentIntentResponse response = api.paymentCreatePaymentIntent(authorization, createPaymentIntentInput);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void paymentDeletePaymentIntentTest() throws ApiException {
        String authorization = null;
        String id = null;
        PaymentIntentResponse response = api.paymentDeletePaymentIntent(authorization, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void paymentGetAllPaymentIntentsTest() throws ApiException {
        String authorization = null;
        List<PaymentIntentResponse> response = api.paymentGetAllPaymentIntents(authorization);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void paymentGetAvailableChainsTest() throws ApiException {
        List<String> response = api.paymentGetAvailableChains();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void paymentGetPaymentIntentTest() throws ApiException {
        String authorization = null;
        String id = null;
        PaymentIntentResponse response = api.paymentGetPaymentIntent(authorization, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void paymentUpdatePaymentIntentTest() throws ApiException {
        String authorization = null;
        String id = null;
        CreatePaymentIntentInput createPaymentIntentInput = null;
        PaymentIntentResponse response = api.paymentUpdatePaymentIntent(authorization, id, createPaymentIntentInput);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tatumWebhookTest() throws ApiException {
        String id = null;
        TatumTransactionEvent tatumTransactionEvent = null;
        Object response = api.tatumWebhook(id, tatumTransactionEvent);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePaymentIntentConfigTest() throws ApiException {
        String authorization = null;
        String id = null;
        Object body = null;
        PaymentIntentResponse response = api.updatePaymentIntentConfig(authorization, id, body);
        // TODO: test validations
    }

}
