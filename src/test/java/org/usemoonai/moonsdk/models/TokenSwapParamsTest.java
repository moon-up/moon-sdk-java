/*
 * moon-vault-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.usemoonai.moonsdk.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TokenSwapParams
 */
public class TokenSwapParamsTest {
    private final TokenSwapParams model = new TokenSwapParams();

    /**
     * Model tests for TokenSwapParams
     */
    @Test
    public void testTokenSwapParams() {
        // TODO: test TokenSwapParams
    }

    /**
     * Test the property 'to'
     */
    @Test
    public void toTest() {
        // TODO: test to
    }

    /**
     * Test the property 'data'
     */
    @Test
    public void dataTest() {
        // TODO: test data
    }

    /**
     * Test the property 'input'
     */
    @Test
    public void inputTest() {
        // TODO: test input
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

    /**
     * Test the property 'nonce'
     */
    @Test
    public void nonceTest() {
        // TODO: test nonce
    }

    /**
     * Test the property 'gas'
     */
    @Test
    public void gasTest() {
        // TODO: test gas
    }

    /**
     * Test the property 'gasPrice'
     */
    @Test
    public void gasPriceTest() {
        // TODO: test gasPrice
    }

    /**
     * Test the property 'chainId'
     */
    @Test
    public void chainIdTest() {
        // TODO: test chainId
    }

    /**
     * Test the property 'encoding'
     */
    @Test
    public void encodingTest() {
        // TODO: test encoding
    }

    /**
     * Test the property 'EOA'
     */
    @Test
    public void EOATest() {
        // TODO: test EOA
    }

    /**
     * Test the property 'contractAddress'
     */
    @Test
    public void contractAddressTest() {
        // TODO: test contractAddress
    }

    /**
     * Test the property 'tokenId'
     */
    @Test
    public void tokenIdTest() {
        // TODO: test tokenId
    }

    /**
     * Test the property 'tokenIds'
     */
    @Test
    public void tokenIdsTest() {
        // TODO: test tokenIds
    }

    /**
     * Test the property 'approved'
     */
    @Test
    public void approvedTest() {
        // TODO: test approved
    }

    /**
     * Test the property 'broadcast'
     */
    @Test
    public void broadcastTest() {
        // TODO: test broadcast
    }

    /**
     * Test the property 'tokenIn'
     */
    @Test
    public void tokenInTest() {
        // TODO: test tokenIn
    }

    /**
     * Test the property 'tokenOut'
     */
    @Test
    public void tokenOutTest() {
        // TODO: test tokenOut
    }

    /**
     * Test the property 'tokenInDecimals'
     */
    @Test
    public void tokenInDecimalsTest() {
        // TODO: test tokenInDecimals
    }

    /**
     * Test the property 'tokenOutDecimals'
     */
    @Test
    public void tokenOutDecimalsTest() {
        // TODO: test tokenOutDecimals
    }

    /**
     * Test the property 'amountIn'
     */
    @Test
    public void amountInTest() {
        // TODO: test amountIn
    }

    /**
     * Test the property 'slippage'
     */
    @Test
    public void slippageTest() {
        // TODO: test slippage
    }

    /**
     * Test the property 'recipient'
     */
    @Test
    public void recipientTest() {
        // TODO: test recipient
    }

    /**
     * Test the property 'referrer'
     */
    @Test
    public void referrerTest() {
        // TODO: test referrer
    }

}
