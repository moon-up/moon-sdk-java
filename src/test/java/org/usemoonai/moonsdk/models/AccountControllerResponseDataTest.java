/*
 * moon-vault-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.usemoonai.moonsdk.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.usemoonai.moonsdk.models.AaveReservesData;
import org.usemoonai.moonsdk.models.AccountResponse;
import org.usemoonai.moonsdk.models.BalanceResponse;
import org.usemoonai.moonsdk.models.BitcoinTransactionOutput;
import org.usemoonai.moonsdk.models.BroadCastRawTransactionResponse;
import org.usemoonai.moonsdk.models.ENSReverseResolveResponse;
import org.usemoonai.moonsdk.models.EnsResolveResponse;
import org.usemoonai.moonsdk.models.Erc1155Response;
import org.usemoonai.moonsdk.models.Erc20Response;
import org.usemoonai.moonsdk.models.Erc721Response;
import org.usemoonai.moonsdk.models.NonceResponse;
import org.usemoonai.moonsdk.models.SignMessage;
import org.usemoonai.moonsdk.models.Transaction;
import org.usemoonai.moonsdk.models.TransactionData;
import org.usemoonai.moonsdk.models.TransactionRequest;
import org.usemoonai.moonsdk.models.Tx;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AccountControllerResponseData
 */
public class AccountControllerResponseDataTest {
    private final AccountControllerResponseData model = new AccountControllerResponseData();

    /**
     * Model tests for AccountControllerResponseData
     */
    @Test
    public void testAccountControllerResponseData() {
        // TODO: test AccountControllerResponseData
    }

    /**
     * Test the property 'nonce'
     */
    @Test
    public void nonceTest() {
        // TODO: test nonce
    }

    /**
     * Test the property 'balance'
     */
    @Test
    public void balanceTest() {
        // TODO: test balance
    }

    /**
     * Test the property 'transactionHash'
     */
    @Test
    public void transactionHashTest() {
        // TODO: test transactionHash
    }

    /**
     * Test the property 'signedTransaction'
     */
    @Test
    public void signedTransactionTest() {
        // TODO: test signedTransaction
    }

    /**
     * Test the property 'rawTransaction'
     */
    @Test
    public void rawTransactionTest() {
        // TODO: test rawTransaction
    }

    /**
     * Test the property 'data'
     */
    @Test
    public void dataTest() {
        // TODO: test data
    }

    /**
     * Test the property 'transactions'
     */
    @Test
    public void transactionsTest() {
        // TODO: test transactions
    }

    /**
     * Test the property 'moonScanUrl'
     */
    @Test
    public void moonScanUrlTest() {
        // TODO: test moonScanUrl
    }

    /**
     * Test the property 'signature'
     */
    @Test
    public void signatureTest() {
        // TODO: test signature
    }

    /**
     * Test the property 'transaction'
     */
    @Test
    public void transactionTest() {
        // TODO: test transaction
    }

    /**
     * Test the property 'userOps'
     */
    @Test
    public void userOpsTest() {
        // TODO: test userOps
    }

    /**
     * Test the property 'useropTransaction'
     */
    @Test
    public void useropTransactionTest() {
        // TODO: test useropTransaction
    }

    /**
     * Test the property 'keys'
     */
    @Test
    public void keysTest() {
        // TODO: test keys
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'encoding'
     */
    @Test
    public void encodingTest() {
        // TODO: test encoding
    }

    /**
     * Test the property 'header'
     */
    @Test
    public void headerTest() {
        // TODO: test header
    }

    /**
     * Test the property 'signtype'
     */
    @Test
    public void signtypeTest() {
        // TODO: test signtype
    }

    /**
     * Test the property 'domain'
     */
    @Test
    public void domainTest() {
        // TODO: test domain
    }

    /**
     * Test the property 'currentAtokenBalance'
     */
    @Test
    public void currentAtokenBalanceTest() {
        // TODO: test currentAtokenBalance
    }

    /**
     * Test the property 'currentBorrowBalance'
     */
    @Test
    public void currentBorrowBalanceTest() {
        // TODO: test currentBorrowBalance
    }

    /**
     * Test the property 'principalBorrowBalance'
     */
    @Test
    public void principalBorrowBalanceTest() {
        // TODO: test principalBorrowBalance
    }

    /**
     * Test the property 'borrowRateMode'
     */
    @Test
    public void borrowRateModeTest() {
        // TODO: test borrowRateMode
    }

    /**
     * Test the property 'borrowRate'
     */
    @Test
    public void borrowRateTest() {
        // TODO: test borrowRate
    }

    /**
     * Test the property 'liquidityRate'
     */
    @Test
    public void liquidityRateTest() {
        // TODO: test liquidityRate
    }

    /**
     * Test the property 'originationFee'
     */
    @Test
    public void originationFeeTest() {
        // TODO: test originationFee
    }

    /**
     * Test the property 'variableBorrowIndex'
     */
    @Test
    public void variableBorrowIndexTest() {
        // TODO: test variableBorrowIndex
    }

    /**
     * Test the property 'lastUpdateTimestamp'
     */
    @Test
    public void lastUpdateTimestampTest() {
        // TODO: test lastUpdateTimestamp
    }

    /**
     * Test the property 'usageAsCollateralEnabled'
     */
    @Test
    public void usageAsCollateralEnabledTest() {
        // TODO: test usageAsCollateralEnabled
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'chainId'
     */
    @Test
    public void chainIdTest() {
        // TODO: test chainId
    }

    /**
     * Test the property 'gas'
     */
    @Test
    public void gasTest() {
        // TODO: test gas
    }

    /**
     * Test the property 'gasPrice'
     */
    @Test
    public void gasPriceTest() {
        // TODO: test gasPrice
    }

    /**
     * Test the property 'gasTipCap'
     */
    @Test
    public void gasTipCapTest() {
        // TODO: test gasTipCap
    }

    /**
     * Test the property 'gasFeeCap'
     */
    @Test
    public void gasFeeCapTest() {
        // TODO: test gasFeeCap
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

    /**
     * Test the property 'from'
     */
    @Test
    public void fromTest() {
        // TODO: test from
    }

    /**
     * Test the property 'to'
     */
    @Test
    public void toTest() {
        // TODO: test to
    }

    /**
     * Test the property 'blobGas'
     */
    @Test
    public void blobGasTest() {
        // TODO: test blobGas
    }

    /**
     * Test the property 'blobGasFeeCap'
     */
    @Test
    public void blobGasFeeCapTest() {
        // TODO: test blobGasFeeCap
    }

    /**
     * Test the property 'blobHashes'
     */
    @Test
    public void blobHashesTest() {
        // TODO: test blobHashes
    }

    /**
     * Test the property 'v'
     */
    @Test
    public void vTest() {
        // TODO: test v
    }

    /**
     * Test the property 'r'
     */
    @Test
    public void rTest() {
        // TODO: test r
    }

    /**
     * Test the property 's'
     */
    @Test
    public void sTest() {
        // TODO: test s
    }

    /**
     * Test the property 'symbol'
     */
    @Test
    public void symbolTest() {
        // TODO: test symbol
    }

    /**
     * Test the property 'decimals'
     */
    @Test
    public void decimalsTest() {
        // TODO: test decimals
    }

    /**
     * Test the property 'totalSupply'
     */
    @Test
    public void totalSupplyTest() {
        // TODO: test totalSupply
    }

    /**
     * Test the property 'contractAddress'
     */
    @Test
    public void contractAddressTest() {
        // TODO: test contractAddress
    }

    /**
     * Test the property 'balanceOf'
     */
    @Test
    public void balanceOfTest() {
        // TODO: test balanceOf
    }

    /**
     * Test the property 'allowance'
     */
    @Test
    public void allowanceTest() {
        // TODO: test allowance
    }

    /**
     * Test the property 'balanceOf'
     */
    @Test
    public void balanceOfTest() {
        // TODO: test balanceOf
    }

    /**
     * Test the property 'balanceOfBatch'
     */
    @Test
    public void balanceOfBatchTest() {
        // TODO: test balanceOfBatch
    }

    /**
     * Test the property 'success'
     */
    @Test
    public void successTest() {
        // TODO: test success
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'signedTx'
     */
    @Test
    public void signedTxTest() {
        // TODO: test signedTx
    }

    /**
     * Test the property 'ownerOf'
     */
    @Test
    public void ownerOfTest() {
        // TODO: test ownerOf
    }

    /**
     * Test the property 'tokenUri'
     */
    @Test
    public void tokenUriTest() {
        // TODO: test tokenUri
    }

    /**
     * Test the property 'isApprovedForAll'
     */
    @Test
    public void isApprovedForAllTest() {
        // TODO: test isApprovedForAll
    }

}
