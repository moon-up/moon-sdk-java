/*
 * moon-vault-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.usemoonai.moonsdk.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.usemoonai.moonsdk.client.JSON;

/**
 * AaveReservesData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-26T19:21:21.691562056+10:00[Australia/Brisbane]")
public class AaveReservesData {
  public static final String SERIALIZED_NAME_CURRENT_ATOKEN_BALANCE = "current_atoken_balance";
  @SerializedName(SERIALIZED_NAME_CURRENT_ATOKEN_BALANCE)
  private String currentAtokenBalance;

  public static final String SERIALIZED_NAME_CURRENT_BORROW_BALANCE = "current_borrow_balance";
  @SerializedName(SERIALIZED_NAME_CURRENT_BORROW_BALANCE)
  private String currentBorrowBalance;

  public static final String SERIALIZED_NAME_PRINCIPAL_BORROW_BALANCE = "principal_borrow_balance";
  @SerializedName(SERIALIZED_NAME_PRINCIPAL_BORROW_BALANCE)
  private String principalBorrowBalance;

  public static final String SERIALIZED_NAME_BORROW_RATE_MODE = "borrow_rate_mode";
  @SerializedName(SERIALIZED_NAME_BORROW_RATE_MODE)
  private String borrowRateMode;

  public static final String SERIALIZED_NAME_BORROW_RATE = "borrow_rate";
  @SerializedName(SERIALIZED_NAME_BORROW_RATE)
  private String borrowRate;

  public static final String SERIALIZED_NAME_LIQUIDITY_RATE = "liquidity_rate";
  @SerializedName(SERIALIZED_NAME_LIQUIDITY_RATE)
  private String liquidityRate;

  public static final String SERIALIZED_NAME_ORIGINATION_FEE = "origination_fee";
  @SerializedName(SERIALIZED_NAME_ORIGINATION_FEE)
  private String originationFee;

  public static final String SERIALIZED_NAME_VARIABLE_BORROW_INDEX = "variable_borrow_index";
  @SerializedName(SERIALIZED_NAME_VARIABLE_BORROW_INDEX)
  private String variableBorrowIndex;

  public static final String SERIALIZED_NAME_LAST_UPDATE_TIMESTAMP = "last_update_timestamp";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_TIMESTAMP)
  private String lastUpdateTimestamp;

  public static final String SERIALIZED_NAME_USAGE_AS_COLLATERAL_ENABLED = "usage_as_collateral_enabled";
  @SerializedName(SERIALIZED_NAME_USAGE_AS_COLLATERAL_ENABLED)
  private String usageAsCollateralEnabled;

  public AaveReservesData() {
  }

  public AaveReservesData currentAtokenBalance(String currentAtokenBalance) {
    this.currentAtokenBalance = currentAtokenBalance;
    return this;
  }

   /**
   * Get currentAtokenBalance
   * @return currentAtokenBalance
  **/
  @javax.annotation.Nonnull
  public String getCurrentAtokenBalance() {
    return currentAtokenBalance;
  }

  public void setCurrentAtokenBalance(String currentAtokenBalance) {
    this.currentAtokenBalance = currentAtokenBalance;
  }


  public AaveReservesData currentBorrowBalance(String currentBorrowBalance) {
    this.currentBorrowBalance = currentBorrowBalance;
    return this;
  }

   /**
   * Get currentBorrowBalance
   * @return currentBorrowBalance
  **/
  @javax.annotation.Nonnull
  public String getCurrentBorrowBalance() {
    return currentBorrowBalance;
  }

  public void setCurrentBorrowBalance(String currentBorrowBalance) {
    this.currentBorrowBalance = currentBorrowBalance;
  }


  public AaveReservesData principalBorrowBalance(String principalBorrowBalance) {
    this.principalBorrowBalance = principalBorrowBalance;
    return this;
  }

   /**
   * Get principalBorrowBalance
   * @return principalBorrowBalance
  **/
  @javax.annotation.Nonnull
  public String getPrincipalBorrowBalance() {
    return principalBorrowBalance;
  }

  public void setPrincipalBorrowBalance(String principalBorrowBalance) {
    this.principalBorrowBalance = principalBorrowBalance;
  }


  public AaveReservesData borrowRateMode(String borrowRateMode) {
    this.borrowRateMode = borrowRateMode;
    return this;
  }

   /**
   * Get borrowRateMode
   * @return borrowRateMode
  **/
  @javax.annotation.Nonnull
  public String getBorrowRateMode() {
    return borrowRateMode;
  }

  public void setBorrowRateMode(String borrowRateMode) {
    this.borrowRateMode = borrowRateMode;
  }


  public AaveReservesData borrowRate(String borrowRate) {
    this.borrowRate = borrowRate;
    return this;
  }

   /**
   * Get borrowRate
   * @return borrowRate
  **/
  @javax.annotation.Nonnull
  public String getBorrowRate() {
    return borrowRate;
  }

  public void setBorrowRate(String borrowRate) {
    this.borrowRate = borrowRate;
  }


  public AaveReservesData liquidityRate(String liquidityRate) {
    this.liquidityRate = liquidityRate;
    return this;
  }

   /**
   * Get liquidityRate
   * @return liquidityRate
  **/
  @javax.annotation.Nonnull
  public String getLiquidityRate() {
    return liquidityRate;
  }

  public void setLiquidityRate(String liquidityRate) {
    this.liquidityRate = liquidityRate;
  }


  public AaveReservesData originationFee(String originationFee) {
    this.originationFee = originationFee;
    return this;
  }

   /**
   * Get originationFee
   * @return originationFee
  **/
  @javax.annotation.Nonnull
  public String getOriginationFee() {
    return originationFee;
  }

  public void setOriginationFee(String originationFee) {
    this.originationFee = originationFee;
  }


  public AaveReservesData variableBorrowIndex(String variableBorrowIndex) {
    this.variableBorrowIndex = variableBorrowIndex;
    return this;
  }

   /**
   * Get variableBorrowIndex
   * @return variableBorrowIndex
  **/
  @javax.annotation.Nonnull
  public String getVariableBorrowIndex() {
    return variableBorrowIndex;
  }

  public void setVariableBorrowIndex(String variableBorrowIndex) {
    this.variableBorrowIndex = variableBorrowIndex;
  }


  public AaveReservesData lastUpdateTimestamp(String lastUpdateTimestamp) {
    this.lastUpdateTimestamp = lastUpdateTimestamp;
    return this;
  }

   /**
   * Get lastUpdateTimestamp
   * @return lastUpdateTimestamp
  **/
  @javax.annotation.Nonnull
  public String getLastUpdateTimestamp() {
    return lastUpdateTimestamp;
  }

  public void setLastUpdateTimestamp(String lastUpdateTimestamp) {
    this.lastUpdateTimestamp = lastUpdateTimestamp;
  }


  public AaveReservesData usageAsCollateralEnabled(String usageAsCollateralEnabled) {
    this.usageAsCollateralEnabled = usageAsCollateralEnabled;
    return this;
  }

   /**
   * Get usageAsCollateralEnabled
   * @return usageAsCollateralEnabled
  **/
  @javax.annotation.Nonnull
  public String getUsageAsCollateralEnabled() {
    return usageAsCollateralEnabled;
  }

  public void setUsageAsCollateralEnabled(String usageAsCollateralEnabled) {
    this.usageAsCollateralEnabled = usageAsCollateralEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AaveReservesData aaveReservesData = (AaveReservesData) o;
    return Objects.equals(this.currentAtokenBalance, aaveReservesData.currentAtokenBalance) &&
        Objects.equals(this.currentBorrowBalance, aaveReservesData.currentBorrowBalance) &&
        Objects.equals(this.principalBorrowBalance, aaveReservesData.principalBorrowBalance) &&
        Objects.equals(this.borrowRateMode, aaveReservesData.borrowRateMode) &&
        Objects.equals(this.borrowRate, aaveReservesData.borrowRate) &&
        Objects.equals(this.liquidityRate, aaveReservesData.liquidityRate) &&
        Objects.equals(this.originationFee, aaveReservesData.originationFee) &&
        Objects.equals(this.variableBorrowIndex, aaveReservesData.variableBorrowIndex) &&
        Objects.equals(this.lastUpdateTimestamp, aaveReservesData.lastUpdateTimestamp) &&
        Objects.equals(this.usageAsCollateralEnabled, aaveReservesData.usageAsCollateralEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentAtokenBalance, currentBorrowBalance, principalBorrowBalance, borrowRateMode, borrowRate, liquidityRate, originationFee, variableBorrowIndex, lastUpdateTimestamp, usageAsCollateralEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AaveReservesData {\n");
    sb.append("    currentAtokenBalance: ").append(toIndentedString(currentAtokenBalance)).append("\n");
    sb.append("    currentBorrowBalance: ").append(toIndentedString(currentBorrowBalance)).append("\n");
    sb.append("    principalBorrowBalance: ").append(toIndentedString(principalBorrowBalance)).append("\n");
    sb.append("    borrowRateMode: ").append(toIndentedString(borrowRateMode)).append("\n");
    sb.append("    borrowRate: ").append(toIndentedString(borrowRate)).append("\n");
    sb.append("    liquidityRate: ").append(toIndentedString(liquidityRate)).append("\n");
    sb.append("    originationFee: ").append(toIndentedString(originationFee)).append("\n");
    sb.append("    variableBorrowIndex: ").append(toIndentedString(variableBorrowIndex)).append("\n");
    sb.append("    lastUpdateTimestamp: ").append(toIndentedString(lastUpdateTimestamp)).append("\n");
    sb.append("    usageAsCollateralEnabled: ").append(toIndentedString(usageAsCollateralEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("current_atoken_balance");
    openapiFields.add("current_borrow_balance");
    openapiFields.add("principal_borrow_balance");
    openapiFields.add("borrow_rate_mode");
    openapiFields.add("borrow_rate");
    openapiFields.add("liquidity_rate");
    openapiFields.add("origination_fee");
    openapiFields.add("variable_borrow_index");
    openapiFields.add("last_update_timestamp");
    openapiFields.add("usage_as_collateral_enabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("current_atoken_balance");
    openapiRequiredFields.add("current_borrow_balance");
    openapiRequiredFields.add("principal_borrow_balance");
    openapiRequiredFields.add("borrow_rate_mode");
    openapiRequiredFields.add("borrow_rate");
    openapiRequiredFields.add("liquidity_rate");
    openapiRequiredFields.add("origination_fee");
    openapiRequiredFields.add("variable_borrow_index");
    openapiRequiredFields.add("last_update_timestamp");
    openapiRequiredFields.add("usage_as_collateral_enabled");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AaveReservesData
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AaveReservesData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AaveReservesData is not found in the empty JSON string", AaveReservesData.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AaveReservesData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AaveReservesData` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AaveReservesData.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("current_atoken_balance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `current_atoken_balance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("current_atoken_balance").toString()));
      }
      if (!jsonObj.get("current_borrow_balance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `current_borrow_balance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("current_borrow_balance").toString()));
      }
      if (!jsonObj.get("principal_borrow_balance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `principal_borrow_balance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("principal_borrow_balance").toString()));
      }
      if (!jsonObj.get("borrow_rate_mode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `borrow_rate_mode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("borrow_rate_mode").toString()));
      }
      if (!jsonObj.get("borrow_rate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `borrow_rate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("borrow_rate").toString()));
      }
      if (!jsonObj.get("liquidity_rate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `liquidity_rate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("liquidity_rate").toString()));
      }
      if (!jsonObj.get("origination_fee").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `origination_fee` to be a primitive type in the JSON string but got `%s`", jsonObj.get("origination_fee").toString()));
      }
      if (!jsonObj.get("variable_borrow_index").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `variable_borrow_index` to be a primitive type in the JSON string but got `%s`", jsonObj.get("variable_borrow_index").toString()));
      }
      if (!jsonObj.get("last_update_timestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_update_timestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_update_timestamp").toString()));
      }
      if (!jsonObj.get("usage_as_collateral_enabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `usage_as_collateral_enabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("usage_as_collateral_enabled").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AaveReservesData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AaveReservesData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AaveReservesData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AaveReservesData.class));

       return (TypeAdapter<T>) new TypeAdapter<AaveReservesData>() {
           @Override
           public void write(JsonWriter out, AaveReservesData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AaveReservesData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AaveReservesData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AaveReservesData
  * @throws IOException if the JSON string is invalid with respect to AaveReservesData
  */
  public static AaveReservesData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AaveReservesData.class);
  }

 /**
  * Convert an instance of AaveReservesData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

